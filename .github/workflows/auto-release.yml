name: Auto Release

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '**.md'
      - '.github/workflows/auto-release.yml'
  pull_request:
    branches: [ main ]

permissions:
  contents: write

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        php: [8.2, 8.3]
        laravel: [10.*, 11.*]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, dom, filter, gd, iconv, json, mbstring, pdo, phar, tokenizer, xml, xmlwriter, zip
          coverage: none

      - name: Install dependencies
        uses: ramsey/composer-install@v2
        with:
          composer-options: --prefer-dist --optimize-autoloader

      - name: Run tests
        run: vendor/bin/phpunit

  security:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, dom, filter, gd, iconv, json, mbstring, pdo, phar, tokenizer, xml, xmlwriter, zip
          coverage: none

      - name: Install dependencies
        uses: ramsey/composer-install@v2
        with:
          composer-options: --prefer-dist --optimize-autoloader

      - name: Run security check
        run: composer audit --format=json --no-interaction

  release:
    needs: [test, security]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, dom, filter, gd, iconv, json, mbstring, pdo, phar, tokenizer, xml, xmlwriter, zip
          coverage: none

      - name: Install Composer
        uses: ramsey/composer-install@v2
        with:
          composer-options: --no-dev --optimize-autoloader

      - name: Get current version
        id: current_version
        run: |
          CURRENT_VERSION=$(composer config version)
          echo "current_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          echo "Current version: $CURRENT_VERSION"

      - name: Calculate new version
        id: new_version
        run: |
          CURRENT_VERSION=${{ steps.current_version.outputs.current_version }}
          IFS='.' read -ra VERSION_PARTS <<< "$CURRENT_VERSION"
          MAJOR=${VERSION_PARTS[0]}
          MINOR=${VERSION_PARTS[1]}
          PATCH=${VERSION_PARTS[2]}

          # Auto-increment patch version
          NEW_PATCH=$((PATCH + 1))
          NEW_VERSION="$MAJOR.$MINOR.$NEW_PATCH"

          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "New version: $NEW_VERSION"

      - name: Configure Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Create and push tag
        run: |
          git tag -a "v${{ steps.new_version.outputs.new_version }}" -m "Release ${{ steps.new_version.outputs.new_version }}"
          git push origin "v${{ steps.new_version.outputs.new_version }}"

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.new_version.outputs.new_version }}
          release_name: Release ${{ steps.new_version.outputs.new_version }}
          body: |
            ## Release ${{ steps.new_version.outputs.new_version }}

            ### What's Changed
            - Automated release via GitHub Actions
            - Version calculated: ${{ steps.new_version.outputs.new_version }}

            ### Installation
            ```bash
            composer require fullstack/redbird:${{ steps.new_version.outputs.new_version }}
            ```

            ### Changelog
            This release includes all changes since the last release.

            **Note:** This is an automated release. For detailed changelog, please check the commit history.
          draft: false
          prerelease: false

      - name: Notify Packagist
        run: |
          echo "Release v${{ steps.new_version.outputs.new_version }} created successfully!"
          echo "Packagist will automatically update if webhook is configured."
          echo "Package URL: https://packagist.org/packages/fullstack/redbird"

      - name: Notify Slack
        if: always()
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          channel: '#deployments'
          webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
          text: |
            ðŸš€ Redbird Package Release
            Status: ${{ job.status }}
            Version: ${{ steps.new_version.outputs.new_version }}
            Branch: ${{ github.ref }}
            Commit: ${{ github.sha }}
            Author: ${{ github.actor }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Notify Email
        if: always()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "Redbird Package Release - ${{ job.status }}"
          to: ${{ secrets.NOTIFICATION_EMAIL }}
          from: "GitHub Actions"
          body: |
            ðŸš€ Redbird Package Release

            Status: ${{ job.status }}
            Version: ${{ steps.new_version.outputs.new_version }}
            Branch: ${{ github.ref }}
            Author: ${{ github.actor }}
            Commit: ${{ github.sha }}

            View workflow: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
